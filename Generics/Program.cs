// Задание 1
// Создайте приложение для менеджмента сотрудников и паролей
// Необходимо хранить следующую информацию:
// Логины сотрудников;
// Пароли сотрудников.
// Для хранения информации используйте Dictionary<T>.

// Приложение должно предоставлять такую функциональность:
// Добавление логина и пароля сотрудника;
// Удаление логина сотрудника;
// Изменение информации о логине и пароле сотрудника;
// Получение информации о пароле по логину сотрудника.


// Задание 2
// Создайте приложение «Англо-французский словарь»
//
// Необходимо хранить следующую информацию:
// Слово на английском языке;
// Варианты перевода на французский.
// Для хранения информации используйте Dictionary<T>.

// Приложение должно предоставлять такую функциональность:
// Добавление слова и вариантов перевода;
// Удаление слова;
// Удаление варианта перевода;
// Изменение слова;
// Изменение варианта перевода;
// Поиск перевода слова.


// Задание 3
// Создайте приложение, эмулирующее очередь в популярное кафе. Посетители кафе приходят и попадают в очередь, если нет свободного места
// При освобождении столика в кафе, первый посетитель очереди занимает его
// Если приходит клиент, который резервировал столик на определенное время, он получает зарезервированный столик вне очереди.

// При разработке приложения используйте класс Queue<T>.


// Задание 4
// Разработайте систему управления учебными курсами и студентами

// В системе необходимо:
// Хранить данные о студентах и их прогрессе в рамках различных курсов с помощью класса Dictionary<Student, List<CourseProgress>>, где:
// Student — класс, содержащий информацию о студенте (ФИО, ID, группа).
// CourseProgress — класс, отражающий прогресс студента в конкретном курсе (название курса, текущий балл, завершенные темы, текущая тема).
// Реализовать функциональность:
// Добавления нового студента или обновления информации о существующем студенте.
// Добавления курса к студенту и обновления его прогресса.
// Поиска и фильтрации студентов по различным критериям (например, по группе, статусу прогресса в курсе, текущему баллу).
// Сортировки студентов в зависимости от их успеваемости.